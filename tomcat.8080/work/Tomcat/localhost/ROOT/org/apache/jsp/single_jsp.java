/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/11.0.4
 * Generated at: 2025-03-17 14:21:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;
import java.util.List;
import java.util.Objects;

public final class single_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.LinkedHashSet<>(4);
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = new java.util.LinkedHashSet<>(3);
    _jspx_imports_classes.add("java.util.Objects");
    _jspx_imports_classes.add("java.util.List");
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("    <title>Activity Details</title>\r\n");
      out.write("    <link rel = \"stylesheet\" href=\"static/styles.css\">\r\n");
      out.write("    <style>\r\n");
      out.write("        body {\r\n");
      out.write("            font-family: Arial, sans-serif;\r\n");
      out.write("            background: linear-gradient(135deg, #15489c, #113233);\r\n");
      out.write("            color: #c8e6e6;\r\n");
      out.write("            margin: 0;\r\n");
      out.write("            padding: 0;\r\n");
      out.write("            height: 100vh;\r\n");
      out.write("            display: flex;\r\n");
      out.write("            justify-content: center;\r\n");
      out.write("            align-items: center;\r\n");
      out.write("        }\r\n");
      out.write("        .activity-details {\r\n");
      out.write("            background-color: rgba(18, 61, 115, 0.8);\r\n");
      out.write("            padding: 20px;\r\n");
      out.write("            border-radius: 10px;\r\n");
      out.write("            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\r\n");
      out.write("            width: 300px;\r\n");
      out.write("            text-align: left;\r\n");
      out.write("        }\r\n");
      out.write("        .activity-details h1 {\r\n");
      out.write("            color: #80e0d3;\r\n");
      out.write("            text-shadow: 0 0 10px rgba(128, 224, 211, 0.7), 0 0 25px rgba(128, 224, 211, 0.5);\r\n");
      out.write("            margin-bottom: 20px;\r\n");
      out.write("            text-align: center;\r\n");
      out.write("        }\r\n");
      out.write("        .activity-details p {\r\n");
      out.write("            margin: 10px 0;\r\n");
      out.write("        }\r\n");
      out.write("        .activity-details strong {\r\n");
      out.write("            color: #0bdada;\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("        .modal{\r\n");
      out.write("            left: 0%;\r\n");
      out.write("            top: -10%;\r\n");
      out.write("            width: 100%;\r\n");
      out.write("        }\r\n");
      out.write("    </style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<nav>\r\n");
      out.write("    <a href=\"http://localhost:8080\">Home</a>\r\n");
      out.write("    <a href=\"search.html\">Search</a>\r\n");
      out.write("</nav>\r\n");
      out.write("\r\n");
      out.write("<div class=\"activity-details\">\r\n");
      out.write("    <h1>Activity Details</h1>\r\n");
      out.write("    ");

        List<String> activity = (List<String>) request.getAttribute("activity");
        if (activity != null && activity.size() >= 7) {
            String date = activity.get(0);
            String subject = activity.get(1);
            String period = activity.get(2);
            String time = activity.get(3);
            String note = activity.get(4);
            String complete = activity.get(5);
            String url = activity.get(6);
    
      out.write("\r\n");
      out.write("    <p>Date: ");
      out.print( date );
      out.write("</p>\r\n");
      out.write("    <p>Subject: ");
      out.print( subject );
      out.write("</p>\r\n");
      out.write("    <p>Period: ");
      out.print( period );
      out.write("</p>\r\n");
      out.write("    <p>Time: ");
      out.print( time );
      out.write("</p>\r\n");
      out.write("    <p>Note: ");
      out.print( note );
      out.write("</p>\r\n");
      out.write("    <p>Status: ");
      out.print( "TRUE".equals(complete) ? "Completed" : "Incomplete" );
      out.write("</p>\r\n");
      out.write("\r\n");
      out.write("    <div id=\"button-container\">\r\n");
      out.write("        <form method=\"POST\" action=\"/delete.html\">\r\n");
      out.write("        <input type=\"hidden\" id=\"date1\" name=\"date\" value=\"");
      out.print( date );
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"date-period1\" name=\"period\" value = \"");
      out.print(period);
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"subjectName1\" name=\"subject\" value=\"");
      out.print(subject);
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"subjectTime1\" name=\"time\" value=\"");
      out.print(time);
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"note1\" name=\"note\" value=\"");
      out.print(note);
      out.write("\">\r\n");
      out.write("        <input type=\"hidden\" id=\"complete1\" name=\"complete\" value=\"");
      out.print(complete);
      out.write("\">\r\n");
      out.write("        <button class=\"submit\" >üóëÔ∏è</button>\r\n");
      out.write("        </form>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <button onclick=\"openEditModal()\">‚úèÔ∏è</button>\r\n");
      out.write("    <div id=\"editModal\" class=\"modal\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("            <span class=\"close\" onclick=\"closeModal()\">&times;</span>\r\n");
      out.write("\r\n");
      out.write("            <form action=\"/edit.html\" method=\"post\">\r\n");
      out.write("                <h2>Edit Activity for ");
      out.print(period);
      out.write("</h2>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"hidden\" name=\"oldDate\" value=\"");
      out.print( date );
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" name=\"oldPeriod\" value = \"");
      out.print(period);
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" name=\"oldSubject\" value=\"");
      out.print(subject);
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" name=\"oldTime\" value=\"");
      out.print(time);
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" name=\"oldNote\" value=\"");
      out.print(note);
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" name=\"oldComplete\" value=\"");
      out.print(complete);
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <label for=\"new-subject\">Subject:</label>\r\n");
      out.write("                <input type=\"text\" id=\"new-subject\" name=\"newSubject\" value=\"");
      out.print(subject);
      out.write("\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("                <label for=\"new-time\">Time:</label>\r\n");
      out.write("                <input type=\"number\" step=\"any\" id=\"new-time\" name=\"newTime\" value=\"");
      out.print(time);
      out.write("\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("                <label for=\"new-note\">Note:</label>\r\n");
      out.write("                <input type=\"text\" id=\"new-note\" name=\"newNote\" value=\"");
      out.print(note);
      out.write("\" required><br><br>\r\n");
      out.write("\r\n");
      out.write("                <label for=\"image\">Image URL:</label>\r\n");
      out.write("                <input type=\"url\" id=\"image\" name=\"url\"><br><br>\r\n");
      out.write("\r\n");
      out.write("                <label for=\"new-complete\">Completed:</label>\r\n");
      out.write("                <select id=\"new-complete\" name=\"newComplete\">\r\n");
      out.write("                    <option value=\"FALSE\">Not Completed</option>\r\n");
      out.write("                    <option value=\"TRUE\">Completed</option>\r\n");
      out.write("                </select><br><br>\r\n");
      out.write("\r\n");
      out.write("                <input type=\"hidden\" id=\"new-period\" name=\"newPeriod\" value=\"");
      out.print( period );
      out.write("\">\r\n");
      out.write("                <input type=\"hidden\" id=\"new-day\" name=\"newDate\" value=\"");
      out.print( date );
      out.write("\">\r\n");
      out.write("\r\n");
      out.write("                <button type=\"submit\" id=\"save\">Save Changes</button>\r\n");
      out.write("            </form>\r\n");
      out.write("        </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    ");
 if (url != null && !url.equals("null")){
      out.write("\r\n");
      out.write("    <button onclick=\"window.location.href = '");
      out.print( url );
      out.write("'\">View Picture</button>\r\n");
      out.write("    ");
}
      out.write("\r\n");
      out.write("    <script>\r\n");
      out.write("        function openEditModal() {\r\n");
      out.write("            let modal = document.getElementById(\"editModal\");\r\n");
      out.write("            modal.style.display = \"block\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("        window.onclick = function(event) {\r\n");
      out.write("            let modal = document.getElementById('editModal');\r\n");
      out.write("            if (event.target === modal || event.target === modal2) {\r\n");
      out.write("                closeModal();\r\n");
      out.write("            }\r\n");
      out.write("        }\r\n");
      out.write("        function closeModal() {\r\n");
      out.write("            document.getElementById(\"editModal\").style.display = \"none\";\r\n");
      out.write("        }\r\n");
      out.write("\r\n");
      out.write("    </script>\r\n");
      out.write("\r\n");
      out.write("    ");

    } 
      out.write("\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
